######## 
#### SYMBOL TABLE ####
PPE_ADCDirectInput_0_LPF_DATA                                                : 64
PPE_ADCDirectInput_0_LT_OPERATION_BOFFSET                                                : 19
PPE_ADCDirectInput_0_LT_OPERATION_BVAL                                                : 0
PPE_ADCDirectInput_0_LT_OPERATION_MOFFSET                                                : 18
PPE_ADCDirectInput_0_LT_OPERATION_MVAL                                                : 16384
PPE_ADCDirectInput_0_PPE_EXECUTION_START                                                : 68
SSE_ADC0_MAIN_PROCEDURE_LOOP_START                                                : 8
SSE_ADC0_MAIN_PROCEDURE_START                                                : 0
SSE_ADC0_MAIN_PROCEDURE_WORD_COUNT                                                : 498
SSE_ADC1_MAIN_PROCEDURE_LOOP_START                                                : 2000
SSE_ADC1_MAIN_PROCEDURE_START                                                : 1992
SSE_ADC1_MAIN_PROCEDURE_WORD_COUNT                                                : 3
SSE_PC0_START                                                : 0
SSE_PC1_START                                                : 1992


#### ANALOG PADS ####
ADCDirectInput_0 ADC:0  QUAD:-1  Logical:11  Pin:V9



#ACE_ACB_AQ0 = 0x40020204
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  IREF:0x14
#    IREF_TRIM[3:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  CURRMON_SIMUL_STROBES:0x1c
#    CM_STB_G0[0:0] = 0x0
#    CM_STB_G1[1:1] = 0x0
#    CM_STB_G2[2:2] = 0x0
#    CM_STB_G3[3:3] = 0x0
#    CM_STB_G4[4:4] = 0x0
#    CM_STB_G5[5:5] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
#    PDVC_ENABLE[7:7] = 0x0
#    SSE_APP_START[5:5] = 0x0
#    VREFSEL[4:4] = 0x0
0x0


#ACE_ACB_AQ = 0x40020234
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
0x0


#ACE_ACB_AQ = 0x40020264
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
0x0


#ACE_ACB_AQ = 0x40020294
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
0x0


#ACE_ACB_AQ = 0x400202c4
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
0x0


#ACE_ACB_AQ = 0x400202f4
#  ABPS1_TRIM0:0x0
#    OFFSET_TRIM[7:0] = 0x0
0x0
#  ABPS1_TRIM1:0x4
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  ABPS2_TRIM0:0x8
#    DAC_TRIM[7:0] = 0x0
0x0
#  ABPS2_TRIM1:0xc
#    GAIN_TRIM[5:2] = 0x0
#    NEG_TRIM[0:0] = 0x0
#    PER4_PER3B[1:1] = 0x0
0x0
#  OBD_TRIM:0x10
#    INCR_DECRB[8:8] = 0x0
#    OBD_TRIM[6:0] = 0x0
0x0
#  OBD_CONFIGURATION:0x18
#    ANA_SEL[3:2] = 0x0
#    CUR_VOLB[0:0] = 0x0
#    NO_CHOPPING[1:1] = 0x0
#    QUAD_DACOUT_SEL[4:4] = 0x0
0x0
#  PRESCALE_CFG:0x20
#    PS1_ENABLE[0:0] = 0x0
#    PS1_GAIN_SELECT[2:1] = 0x0
#    PS2_ENABLE[4:4] = 0x0
#    PS2_GAIN_SELECT[6:5] = 0x0
0x0
#  CURRMON:0x24
#    CM_ENABLE[2:2] = 0x0
#    CM_STROBE[3:3] = 0x0
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
0x0
#  TEMPMON:0x28
#    COMPARATOR_ENABLE[4:4] = 0x0
#    DIRECT_INPUT_SWITCH[1:1] = 0x0
#    HYSTERESIS_SELECT[7:6] = 0x0
#    MUX_SELECT[0:0] = 0x0
#    TM_ENABLE[2:2] = 0x0
#    TM_STROBE[3:3] = 0x0
#    VREF_SWITCH[5:5] = 0x0
0x0
#  ATCOMP:0x2c
#    DAC_INPUT_SELECT[1:0] = 0x0
0x0


#ACE_INIT0 = 0x40020000
#  SSE_TS_CTRL:0x4
#    SSE_SRAM_ENABLE[1:1] = 0x1
#    TS_ENABLE[0:0] = 0x0
0x2


#ACE_INIT = 0x40020000
#  PC0_CTRL:0x48
#    PC0_EN[0:0] = 0x1
0x1
#  PC1_CTRL:0x88
#    PC1_EN[0:0] = 0x1
0x1
#  PC2_CTRL:0xc8
#    PC2_EN[0:0] = 0x0
0x0
#  SSE_PC0:0x410
#    PC[8:0] = 0x0
0x0
#  SSE_PC1:0x414
#    PC[8:0] = 0x1f2
0x1f2
#  SSE_PC2:0x418
#    PC[8:0] = 0x0
0x0
#  FPGA_FLAGS_SEL:0x1260
#    FIFO_AFULL0_SEL[3:3] = 0x0
#    FIFO_AFULL1_SEL[4:4] = 0x0
#    FIFO_AFULL2_SEL[5:5] = 0x0
#    FIFO_EMPTY0_SEL[0:0] = 0x0
#    FIFO_EMPTY1_SEL[1:1] = 0x0
#    FIFO_EMPTY2_SEL[2:2] = 0x0
#    FIFO_FULL0_SEL[6:6] = 0x0
#    FIFO_FULL1_SEL[7:7] = 0x0
#    FIFO_FULL2_SEL[8:8] = 0x0
#    PPE_BUSY_SEL[9:9] = 0x0
0x0
#  PPE_ALU_CTRL:0x1418
#    NSAT_EN[1:1] = 0x1
#    PSAT_EN[0:0] = 0x1
0x3
#  ADC0_FIFO_CTRL:0x1490
#    AFULL_WT_EN[0:0] = 0x1
#    CLR[0:0] = 0x1
#    FULL_WT_EN[0:0] = 0x1
0x1
#  ADC1_FIFO_CTRL:0x149c
#    AFULL_WT_EN[0:0] = 0x1
#    CLR[0:0] = 0x1
#    FULL_WT_EN[0:0] = 0x1
0x1
#  ADC2_FIFO_CTRL:0x14a8
#    AFULL_WT_EN[0:0] = 0x1
#    CLR[0:0] = 0x1
#    FULL_WT_EN[0:0] = 0x1
0x1


#ACE_INIT2 = 0x40020000
#  SSE_TS_CTRL:0x4
#    SSE_SRAM_ENABLE[1:1] = 0x1
#    TS_ENABLE[0:0] = 0x1
0x3
#  ANA_COMM_CTRL:0xc
#    ABPOWERON[3:3] = 0x1
#    ACB_RESETN[4:4] = 0x0
#    ADCRESET[1:1] = 0x1
#    PWRDWN[2:2] = 0x0
#    VREFSEL[0:0] = 0x0
0xa
#  PPE_CTRL:0x1404
#    PPE_EN[0:0] = 0x1
#    PPE_RRDIS0[14:14] = 0x0
#    PPE_RRDIS1[15:15] = 0x0
#    PPE_RRDIS2[16:16] = 0x0
0x1


#ACE_PPE_RAM = 0x40021800
#  CHAN_JUMP_ADDRESS:0x0
######## Jump Addresses for Channel0
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x4
######## Jump Addresses for Channel1
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x8
######## Jump Addresses for Channel2
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0xc
######## Jump Addresses for Channel3
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x10
######## Jump Addresses for Channel4
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x14
######## Jump Addresses for Channel5
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x18
######## Jump Addresses for Channel6
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x1c
######## Jump Addresses for Channel7
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x20
######## Jump Addresses for Channel8
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x24
######## Jump Addresses for Channel9
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x28
######## Jump Addresses for Channel10
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x2c
######## Jump Addresses for Channel11
#    ADC0[9:0] = 0x11
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x11
#  CHAN_JUMP_ADDRESS:0x30
######## Jump Addresses for Channel12
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x34
######## Jump Addresses for Channel13
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x38
######## Jump Addresses for Channel14
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  CHAN_JUMP_ADDRESS:0x3c
######## Jump Addresses for Channel15
#    ADC0[9:0] = 0x0
#    ADC1[19:10] = 0x0
#    ADC2[29:20] = 0x0
0x0
#  DATA:0x40
# - Low Pass Filter Data, Initial Value:  0.000 V ( 0 ) 
#    DATA[31:0] = 0x0
0x0
#  MOVE_REG_TO_REG:0x44
# - Move ADC Result from FIFO to ALUD register
#    C2A[22:22] = 0x0
#    C2A_DLY[18:18] = 0x0
#    C2D[20:20] = 0x0
#    C2D_DLY[16:16] = 0x0
#    DEST_REG[29:24] = 0xf
#    NEGA[23:23] = 0x0
#    NEGA_DLY[19:19] = 0x0
#    S2B[21:21] = 0x0
#    S2B_DLY[17:17] = 0x0
#    SRC_REG[5:0] = 0x22
#    SRC_TYPE[12:11] = 0x0
#    XFER_CTRL[31:30] = 0x1
0x4f000022
#  LOAD_CONSTANT_TO_REG_ALU_DE:0x48
######## Linear Transformation Function:  ADCDirectInput_0
# - Load M factor to ALUE = 1 ( 16384 ) 
#    C2A[22:22] = 0x0
#    C2A_DLY[18:18] = 0x0
#    C2D[20:20] = 0x0
#    C2D_DLY[16:16] = 0x0
#    CONSTANT_VALUE[15:0] = 0x4000
#    DEST_REG[29:24] = 0x10
#    NEGA[23:23] = 0x0
#    NEGA_DLY[19:19] = 0x0
#    S2B[21:21] = 0x0
#    S2B_DLY[17:17] = 0x0
#    XFER_CTRL[31:30] = 0x0
0x10004000
#  LOAD_CONSTANT_TO_REG:0x4c
# - Load upper 24-bits of B value to ALUA = 0 ( 0 ) 
#    CONSTANT_VALUE[23:0] = 0x0
#    DEST_REG[29:24] = 0x9
#    XFER_CTRL[31:30] = 0x0
0x9000000
#  LOAD_CONSTANT_TO_REG:0x50
# - NOP to allow y=mx+b result to load into ALUC
#    CONSTANT_VALUE[23:0] = 0x0
#    DEST_REG[29:24] = 0x0
#    XFER_CTRL[31:30] = 0x0
0x0
#  MOVE_REG_TO_REG:0x54
######## Low Pass Filter Function:  ADCDirectInput_0
# - Move transformed data from previous calculation ALUC to ALUB register
#    C2A[22:22] = 0x0
#    C2A_DLY[18:18] = 0x0
#    C2D[20:20] = 0x0
#    C2D_DLY[16:16] = 0x0
#    DEST_REG[29:24] = 0xb
#    NEGA[23:23] = 0x0
#    NEGA_DLY[19:19] = 0x0
#    S2B[21:21] = 0x0
#    S2B_DLY[17:17] = 0x0
#    SRC_REG[5:0] = 0xd
#    SRC_TYPE[12:11] = 0x0
#    XFER_CTRL[31:30] = 0x1
0x4b00000d
#  MOVE_SRAM_TO_REG:0x58
# - Move previous LPF value to ALUA register
#    C2A[22:22] = 0x0
#    C2A_DLY[18:18] = 0x0
#    C2D[20:20] = 0x0
#    C2D_DLY[16:16] = 0x0
#    DEST_REG[29:24] = 0x9
#    NEGA[23:23] = 0x1
#    NEGA_DLY[19:19] = 0x0
#    S2B[21:21] = 0x1
#    S2B_DLY[17:17] = 0x0
#    SRC_SRAM_ADDR[10:0] = 0x40
#    SRC_TYPE[12:11] = 0x3
#    XFER_CTRL[31:30] = 0x1
0x49a01840
#  LOAD_CONSTANT_TO_REG_ALU_DE:0x5c
# - Load inverse of filtering factor '8192'( 1/8) to ALUE register
#    C2A[22:22] = 0x0
#    C2A_DLY[18:18] = 0x0
#    C2D[20:20] = 0x1
#    C2D_DLY[16:16] = 0x0
#    CONSTANT_VALUE[15:0] = 0x2000
#    DEST_REG[29:24] = 0x10
#    NEGA[23:23] = 0x0
#    NEGA_DLY[19:19] = 0x0
#    S2B[21:21] = 0x0
#    S2B_DLY[17:17] = 0x0
#    XFER_CTRL[31:30] = 0x0
0x10102000
#  LOAD_CONSTANT_TO_REG:0x60
# - NOP to allow ( In - Outn-1 ) / s to store into ALUB
#    CONSTANT_VALUE[23:0] = 0x0
#    DEST_REG[29:24] = 0x0
#    XFER_CTRL[31:30] = 0x0
0x0
#  LOAD_CONSTANT_TO_REG:0x64
# - Clear A register in preparation of threshold comparison (optional)
#    CONSTANT_VALUE[23:0] = 0x0
#    DEST_REG[29:24] = 0x8
#    XFER_CTRL[31:30] = 0x0
0x8000000
#  COPY_REG_TO_SRAM32:0x68
#    DEST_SRAM_ADDR[10:0] = 0x40
#    DEST_TYPE[12:11] = 0x3
#    SRC_REG[29:24] = 0xc
#    WRITEMODE[13:13] = 0x1
#    XFER_CTRL[31:30] = 0x2
0x8c003840
#  LOAD_CONSTANT_TO_REG:0x6c
# - ADCDirectInput_0 PPE Done
#    CONSTANT_VALUE[23:0] = 0x0
#    DEST_REG[29:24] = 0x3f
#    XFER_CTRL[31:30] = 0x0
0x3f000000


#ACE_SSE_RAM = 0x40020800
#  ADC0_MISC_CTRL:0x0
######## ADC0 setup and configuration 
#    ADCRESET[4:4] = 0x0
#    MODE[3:0] = 0x4
#    PWRDWN[5:5] = 0x0
#    SSE_INT_ADDR[15:8] = 0x17
0x1704
#  ADC0_TVC:0x4
#    SSE_INT_ADDR[15:8] = 0x16
#    TVC[7:0] = 0x2
0x1602
#  ADC0_STC:0x8
######## User Instruction: Sample ADCDirectInput_0
#    SSE_INT_ADDR[15:8] = 0x15
#    STC[7:0] = 0x51
0x1551
#  ADC0_CONV_CTRL:0xc
#    ADCSTART[7:7] = 0x1
#    AMUXSEL[4:0] = 0xb
#    CONVWAIT[6:6] = 0x1
#    SSE_INT_ADDR[15:8] = 0x14
0x14cb
#  NOP:0x10
# - Wait for DataValid
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x14
######## User Instruction: Wait for 5000.000 us
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x18
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x20
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x24
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x28
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x30
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x34
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x38
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x40
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x44
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x48
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x50
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x54
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x58
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x60
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x64
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x68
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x70
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x74
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x78
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x7c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x80
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x84
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x88
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x8c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x90
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x94
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x98
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x9c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xa0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xa4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xa8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xb0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xb4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xb8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xbc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xc0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xc4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xc8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xcc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xd0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xd4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xd8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xdc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xe0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xe4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xe8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xf0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xf4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0xf8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0xfc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x100
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x104
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x108
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x10c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x110
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x114
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x118
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x11c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x120
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x124
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x128
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x12c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x130
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x134
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x138
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x13c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x140
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x144
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x148
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x14c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x150
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x154
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x158
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x15c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x160
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x164
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x168
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x16c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x170
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x174
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x178
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x17c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x180
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x184
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x188
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x18c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x190
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x194
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x198
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x19c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x1f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x1fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x200
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x204
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x208
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x20c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x210
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x214
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x218
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x21c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x220
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x224
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x228
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x22c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x230
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x234
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x238
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x23c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x240
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x244
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x248
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x24c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x250
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x254
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x258
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x25c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x260
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x264
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x268
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x26c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x270
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x274
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x278
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x27c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x280
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x284
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x288
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x28c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x290
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x294
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x298
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x29c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x2f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x2fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x300
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x304
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x308
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x30c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x310
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x314
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x318
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x31c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x320
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x324
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x328
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x32c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x330
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x334
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x338
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x33c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x340
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x344
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x348
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x34c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x350
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x354
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x358
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x35c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x360
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x364
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x368
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x36c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x370
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x374
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x378
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x37c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x380
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x384
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x388
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x38c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x390
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x394
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x398
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x39c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x3f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x3fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x400
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x404
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x408
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x40c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x410
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x414
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x418
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x41c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x420
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x424
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x428
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x42c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x430
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x434
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x438
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x43c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x440
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x444
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x448
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x44c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x450
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x454
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x458
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x45c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x460
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x464
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x468
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x46c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x470
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x474
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x478
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x47c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x480
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x484
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x488
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x48c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x490
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x494
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x498
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x49c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x4f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x4fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x500
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x504
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x508
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x50c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x510
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x514
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x518
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x51c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x520
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x524
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x528
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x52c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x530
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x534
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x538
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x53c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x540
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x544
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x548
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x54c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x550
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x554
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x558
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x55c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x560
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x564
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x568
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x56c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x570
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x574
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x578
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x57c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x580
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x584
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x588
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x58c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x590
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x594
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x598
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x59c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x5f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x5fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x600
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x604
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x608
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x60c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x610
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x614
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x618
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x61c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x620
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x624
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x628
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x62c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x630
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x634
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x638
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x63c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x640
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x644
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x648
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x64c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x650
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x654
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x658
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x65c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x660
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x664
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x668
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x66c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x670
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x674
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x678
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x67c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x680
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x684
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x688
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x68c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x690
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x694
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x698
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x69c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6bc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6c4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6c8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6cc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6d0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6d4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6d8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6dc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6e0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6e4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6e8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6ec
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6f0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6f4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x6f8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x6fc
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x700
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x704
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x708
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x70c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x710
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x714
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x718
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x71c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x720
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x724
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x728
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x72c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x730
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x734
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x738
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x73c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x740
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x744
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x748
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x74c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x750
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x754
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x758
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x75c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x760
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x764
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x768
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x76c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x770
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x774
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x778
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x77c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x780
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x784
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x788
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x78c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x790
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x794
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x798
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x79c
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x7a0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x7a4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x7a8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x7ac
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x7b0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x7b4
# - Wait for 255 clocks
#    DLY[7:0] = 0xff
#    SSE_INT_ADDR[15:8] = 0x13
0x13ff
#  NOP:0x7b8
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_DLY:0x7bc
# - Wait for 25 clocks
#    DLY[7:0] = 0x19
#    SSE_INT_ADDR[15:8] = 0x13
0x1319
#  NOP:0x7c0
# - NOP:  Wait for delay counter
#    NOP[7:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x0
0x0
#  PC0_LO:0x7c4
######## User Instruction: Restarts the execution sequence for this timeslot  Jump to program counter 2
#    PC[7:0] = 0x2
#    SSE_INT_ADDR[15:8] = 0x10
0x1002
#  ADC1_MISC_CTRL:0x7c8
######## ADC1 setup and configuration 
#    ADCRESET[4:4] = 0x0
#    MODE[3:0] = 0x4
#    PWRDWN[5:5] = 0x0
#    SSE_INT_ADDR[15:8] = 0x27
0x2704
#  ADC1_TVC:0x7cc
#    SSE_INT_ADDR[15:8] = 0x26
#    TVC[7:0] = 0x2
0x2602
#  PC1_CTRL:0x7d0
######## User Instruction: Stop Execution in this timeslot.  No operations to execute.
#    PC1_EN[0:0] = 0x0
#    SSE_INT_ADDR[15:8] = 0x22
0x2200


#PPE_MERGE_CONFIG = 0x0
#  MERGE_DATA_BLOCK_WORD0:0x0
######## ADCDirectInput_0 : Merge Operation for M value = M2 * M1 
# - Word0:  PPE_SCRATCH64_1 <- M2(PPE_RAM)
#    MERGE_OPERATION[31:24] = 0x0
#    OPERAND_LOCATION[15:0] = 0x300
#    OPERAND_WIDTH[23:16] = 0x0
0x300
#  MERGE_DATA_BLOCK_GENERIC_WORD1:0x4
# - Word1:  PPE_SCRATCH64_1 <- M2(PPE_RAM)
#    OPERAND_TYPE[10:10] = 0x0
#    OPERAND_WIDTH[23:16] = 0x10
#    OPERATION_LOCATION[9:0] = 0x12
#    RESERVED[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x10
0x10100012
#  MERGE_DATA_BLOCK_WORD0:0x8
# - Word0:  PPE_SCRATCH64_1 <- PPE_SCRATCH64_1 * M1
#    MERGE_OPERATION[31:24] = 0x2
#    OPERAND_LOCATION[15:0] = 0x300
#    OPERAND_WIDTH[23:16] = 0x10
0x2100300
#  MERGE_DATA_BLOCK_CHANNEL_WORD1:0xc
# - Word1:  PPE_SCRATCH64_1 <- PPE_SCRATCH64_1 * M1
#    ADC_NUMBER[5:4] = 0x0
#    CALIB_CHOICE[6:6] = 0x0
#    CHANNEL_NUMBER[3:0] = 0xb
#    OPERAND_TYPE[10:10] = 0x1
#    OPERAND_WIDTH[23:16] = 0x10
#    RESERVED1[9:7] = 0x0
#    RESERVED2[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x20
0x2010040b
#  MERGE_DATA_BLOCK_WORD0:0x10
######## ADCDirectInput_0 : Merge Operation for C value = ( M2 * C1 ) + ( C2 )
# - Word0:  PPE_SCRATCH64_2 <- M2(PPE_RAM)
#    MERGE_OPERATION[31:24] = 0x0
#    OPERAND_LOCATION[15:0] = 0x301
#    OPERAND_WIDTH[23:16] = 0x40
0x400301
#  MERGE_DATA_BLOCK_GENERIC_WORD1:0x14
# - Word1:  PPE_SCRATCH64_2 <- M2(PPE_RAM)
#    OPERAND_TYPE[10:10] = 0x0
#    OPERAND_WIDTH[23:16] = 0x10
#    OPERATION_LOCATION[9:0] = 0x12
#    RESERVED[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x10
0x10100012
#  MERGE_DATA_BLOCK_WORD0:0x18
# - Word0:  PPE_SCRATCH64_2 <- M2(PPE_SCRATCH64_2) * C1
#    MERGE_OPERATION[31:24] = 0x2
#    OPERAND_LOCATION[15:0] = 0x301
#    OPERAND_WIDTH[23:16] = 0x10
0x2100301
#  MERGE_DATA_BLOCK_CHANNEL_WORD1:0x1c
# - Word1:  PPE_SCRATCH64_2 <- M2(PPE_SCRATCH64_2) * C1
#    ADC_NUMBER[5:4] = 0x0
#    CALIB_CHOICE[6:6] = 0x1
#    CHANNEL_NUMBER[3:0] = 0xb
#    OPERAND_TYPE[10:10] = 0x1
#    OPERAND_WIDTH[23:16] = 0x10
#    RESERVED1[9:7] = 0x0
#    RESERVED2[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x20
0x2010044b
#  MERGE_DATA_BLOCK_WORD0:0x20
# - Word0:  PPE_RAM <- [ C2 ](in PPE_RAM) + [ M2*C1 ](in PPE_SCRATCH64_2)
#    MERGE_OPERATION[31:24] = 0x1
#    OPERAND_LOCATION[15:0] = 0x13
#    OPERAND_WIDTH[23:16] = 0x18
0x1180013
#  MERGE_DATA_BLOCK_GENERIC_WORD1:0x24
# - Word1:  PPE_RAM <- [ C2 ](in PPE_RAM) + [ M2*C1 ](in PPE_SCRATCH64_2)
#    OPERAND_TYPE[10:10] = 0x0
#    OPERAND_WIDTH[23:16] = 0x20
#    OPERATION_LOCATION[9:0] = 0x301
#    RESERVED[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x18
0x18200301
#  MERGE_DATA_BLOCK_WORD0:0x28
# - Word0:  PPE_RAM <- PPE_SCRATCH64_1(result of M merge) - delay storage so C merge operation can use original M value
#    MERGE_OPERATION[31:24] = 0x0
#    OPERAND_LOCATION[15:0] = 0x12
#    OPERAND_WIDTH[23:16] = 0x10
0x100012
#  MERGE_DATA_BLOCK_GENERIC_WORD1:0x2c
# - Word1:  PPE_RAM <- PPE_SCRATCH64_1(result of M merge) - delay storage so C merge operation can use original M value
#    OPERAND_TYPE[10:10] = 0x0
#    OPERAND_WIDTH[23:16] = 0x20
#    OPERATION_LOCATION[9:0] = 0x300
#    RESERVED[15:11] = 0x0
#    RESULT_WIDTH[31:24] = 0x10
0x10200300


